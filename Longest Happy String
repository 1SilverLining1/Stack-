//https://leetcode.com/problems/longest-happy-string/

class Solution {
public:
    string longestDiverseString(int a, int b, int c) {
        
        
                     priority_queue < pair < int ,char > > pq ; 
                     if ( a > 0 ) 
					 pq.push ( { a , 'a' } ) ;
                     if ( b > 0 )
					 pq.push ( { b , 'b' } ) ; 
                     if ( c > 0 )
					 pq.push ( { c , 'c' } ) ; 
					 string ans ; 
					 
					 while (!pq.empty() )
                     {
                         auto p = pq.top() ; 
                         pq.pop() ; 
                         if ( ans == "" )
                         {
                             ans += p.second ; 
                             p.first -- ; 
                             if ( p.first >= 1 )
                             {
                                 ans += p.second ; 
                                 p.first -- ;
                             }
                             
                             if ( p.first > 0 ) 
                                    pq.push ( p ) ; 
                         }
                         else if ( ans.back () == p.second )
                         {
                             if ( pq.empty() )
                                    break ; 
                             
                             auto q = pq.top() ; 
                             pq.pop() ; 
                             ans += q.second ; 
                             q.first -- ; 
                             if ( q.first > 0 )
                                    pq.push ( q ) ; 
                             pq.push ( p ) ; 
                             
                             
                         }
                         else 
                         {
                             ans += p.second ; 
                             p.first -- ; 
                             if ( p.first >= 1 )
                             {
                                 ans += p.second ; 
                                 p.first -- ; 
                                 
                             }
                             if ( p.first > 0 )
                                    pq.push ( p ) ; 
                         }
                     }
                     
					 return ans ; 
        
    }
};
